version: '3.9'

services:
  mysqldb:
    container_name: db
    image: mariadb:10.7
    env_file:
      - environment/prod/mysql.env
    environment:
      - MYSQL_ROOT_PASSWORD=SDFJ43shdqi324Jsdh123Jdh
    volumes:
      - mysql-data:/var/lib/mysql
      - ../databasesInit/mysql/prod:/docker-entrypoint-initdb.d:ro
    networks:
      lpdiwa-net:
        aliases:
          - mysqldb
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "-uroot", "-pSDFJ43shdqi324Jsdh123Jdh",  "ping", "-h", "localhost"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s

  symfony:
    container_name: symfony
    image: fguntz/symfony:2.0
    env_file:
      - environment/prod/symfony.env
    volumes:
      - ./symfony/php-prod.ini:/usr/local/etc/php/php.ini:ro
      - ../api:/var/www/app
      - api-vendor:/var/www/app/vendor
    working_dir: /var/www/app
    networks:
      lpdiwa-net:
        aliases:
          - symfony
    restart: always
    command: bash -c "composer install && php-fpm"

  http:
    container_name: api
    image: nginx:1.21.6-alpine
    depends_on:
      - symfony
    volumes:
      - ../app:/var/www/app:ro
      - ./http/server-prod.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      lpdiwa-net:
        aliases:
          - httpsrv
        ipv4_address: '10.30.7.10'
    #ports:
    #  - 80:80
    restart: always

  npm:
    container_name: www_wys
    image: node:17
    env_file:
      - environment/prod/npm.env
    volumes:
      - ../app:/var/www/app
      - nodemodules:/src/node_modules
    working_dir: /var/www/app
    command: bash -c "npm install && npm run build"

volumes:
  nodemodules: {}
  api-vendor:
  mysql-data:
  mongo-data:

networks:
  lpdiwa-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.30.7.0/24
